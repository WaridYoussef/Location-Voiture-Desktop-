package app.gestion.Location.models;
// Generated 10-fï¿½vr.-2020 1:53:13 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Location generated by hbm2java
 */
@Entity
@Table(name="LOCATION"
    ,schema="LOC"
)
public class Location  implements java.io.Serializable {


     private short numLoc;
     private String nomLoc;
     private Set<Locataire> locataires = new HashSet<Locataire>(0);
     private Set<Exemplaire> exemplaires = new HashSet<Exemplaire>(0);
     private Set<Client> clients = new HashSet<Client>(0);

    public Location() {
    }

	
    public Location(short numLoc) {
        this.numLoc = numLoc;
    }
    public Location(short numLoc, String nomLoc, Set<Locataire> locataires, Set<Exemplaire> exemplaires, Set<Client> clients) {
       this.numLoc = numLoc;
       this.nomLoc = nomLoc;
       this.locataires = locataires;
       this.exemplaires = exemplaires;
       this.clients = clients;
    }
   
     @Id 

    
    @Column(name="NUM_LOC", unique=true, nullable=false, precision=4, scale=0)
    public short getNumLoc() {
        return this.numLoc;
    }
    
    public void setNumLoc(short numLoc) {
        this.numLoc = numLoc;
    }

    
    @Column(name="NOM_LOC", length=30)
    public String getNomLoc() {
        return this.nomLoc;
    }
    
    public void setNomLoc(String nomLoc) {
        this.nomLoc = nomLoc;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="location")
    public Set<Locataire> getLocataires() {
        return this.locataires;
    }
    
    public void setLocataires(Set<Locataire> locataires) {
        this.locataires = locataires;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="location")
    public Set<Exemplaire> getExemplaires() {
        return this.exemplaires;
    }
    
    public void setExemplaires(Set<Exemplaire> exemplaires) {
        this.exemplaires = exemplaires;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="location")
    public Set<Client> getClients() {
        return this.clients;
    }
    
    public void setClients(Set<Client> clients) {
        this.clients = clients;
    }

    @Override
    public String toString() {
        return nomLoc+"";
    }




}


